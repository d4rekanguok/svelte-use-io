[{"title":"Install","html":"<pre><code class=\"hljs language-sh\">npm i svelte-use-io\n<span class=\"hljs-comment\"># or yarn add svelte-use-io</span>\n<span class=\"hljs-comment\"># or pnpm i svelte-use-io</span>\n</code></pre>"},{"title":"Usage","html":"<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n\t<span class=\"hljs-keyword\">import</span> { create_observer } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'svelte-use-io'</span>;\n\t<span class=\"hljs-keyword\">const</span> { observer } = <span class=\"hljs-title hljs-function\">create_observer</span>();\n\t<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title hljs-function\">doStuff</span> = (<span class=\"hljs-params\">{ detail }</span>) => <span class=\"hljs-variable hljs-language\">console</span>.<span class=\"hljs-title hljs-function\">log</span>({ detail });\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span>></span>\n\t{#each Array.from({ length: 6 }, (_, i) => i + 1) as i (i)}\n\t<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">use:observer</span> <span class=\"hljs-attr\">on:intersecting</span>=<span class=\"hljs-string\">\"{doStuff}\"</span>></span>Item {i}<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n\t{/each}\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n</code></pre>"}]